server:
  port: 8083
spring:
  application:
    name: location-service
  datasource:
    url: ${LOCATION_DB_URL:jdbc:postgresql://localhost:5432/location_database}
    username: ${LOCATION_DB_USER:postgres}
    password: ${LOCATION_DB_PASSWORD:postgres}
    driver-class-name: org.postgresql.Driver
  jpa:
    hibernate:
      ddl-auto: update
  kafka:
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      properties:
        delivery.timeout.ms: 120000
        linger.ms: 0
        request.timeout.ms: 30000
        max.in.flight.requests.per.connection: 5
        enable.idempotence: true
        allow.auto.create.topics: false
    consumer:
      group-id: location-group
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      properties:
        spring:
          json:
            trusted:
              packages: ru.bogdsvn.kafka_library.*

location:
  command:
    topic: locations-command
  event:
    topic: location-event

grpc:
  server:
    port: 9898